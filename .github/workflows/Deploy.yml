name: Deploy
on:
  push:
    branches:
        - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  REGISTRY: us-west1-docker.pkg.dev
  REPOSITORY_NAME: eavesdrop-docker-repository

jobs:
  setup-build-publish-deploy:
    name: Tagged Docker release to Google Artifact Registry
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./apps/frontend/Dockerfile
            image-name: frontend
          - dockerfile: ./apps/backend/Dockerfile
            image-name: backend

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - name: Create frontend env
        run: |-
          echo NEXT_PUBLIC_WEBSERVER_URL=${{ secrets.WEBSERVER_URL }} > ./apps/frontend/.env.production


      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/${{ secrets.google_project_number }}/locations/global/workloadIdentityPools/github/providers/github
          service_account: github@${{ env.PROJECT_ID }}.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - id: docker-push-tagged
        name: Tag Docker image and push to Google Artifact Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME}}/${{ matrix.image-name }}:${{ github.sha }}
            ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME}}/${{ matrix.image-name }}:latest

  gke-deploy:
    needs: setup-build-publish-deploy
    name: Deploy to GKE
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: auth
        name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/${{ secrets.google_project_number }}/locations/global/workloadIdentityPools/github/providers/github
          service_account: github@deft-crawler-400712.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v1
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: ${{ secrets.GKE_CLUSTER_ZONE }}

        # Set up kustomize
      - name: Set up Kustomize
        working-directory: ./kubernetes
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy on GKE
        working-directory: ./kubernetes
        run: |-
          ./kustomize edit set image REGISTRY/PROJECT_ID/REPOSITORY_NAME/frontend:TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY_NAME/frontend:$GITHUB_SHA
          ./kustomize edit set image REGISTRY/PROJECT_ID/REPOSITORY_NAME/backend:TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY_NAME/backend:$GITHUB_SHA
          ./kustomize build . | kubectl apply -f -